Relational databases- we dont have objects, reference types, collections, methods, inheritance.

tables - each one will have a different set of: 
	- columns. Each column will be one piece of data about the type of thing this table contains.
	- rows. Each one will represent one instance of the type of thing this table contains.

- we need a way to identify a particular row uniquely (so that we can reference it in other tables)
the database designer gets to pick exactly what kind of column will identify that row.
he chooses one column to be "primary key". Each row's value for that column must be unique within that 
column. For example, the integer ID weve been using.
Its also possible to have two columns together being that primary key.
 e.g. (City, State) this kind is called a "composite key".

 - we need a way to connect one row to another rwo to establish a relationship between different types of data.
  That way is called a foreign key. If THIS row is connected to THAT rows data, THIS row should have a copy of THAT row's primary key value.
  in SQL... the person table will have a column which holds an address's ID
    that column is called a foreign key.

referential integrity - this means that, every foreign key value should reflect a valid, real primary key value in the other table.
SQL Server will throw an error before itll let you break this.